1. Пример разбиена на потоки - представлен в коде.
Время исполнения кода для входого файла tst_20_32.txt(файл лежит в корне репозитория), 
на моем компьютере было следующим:
-без распаралеливания - 354 сек.
-с распаралеливаеним на два потока - 195 сек. (время округлено)

2. Сложность программы можно описать по наиболее ресурсоемкому вычислению. 
Наиболее трудоемкая часть программы - это перебор коэффициентов бэтта_i при семействе порождающих векторов.
Для перебора была взята концепция кода Грея в порядке минимального изменения. 
Сложность такого алгоритма можно расценивать как О(2^K*N), при учете того, что нужно также обрабатывать 
XOR операцию. 

Ограничения данной реализации - главное ограничения связано с концепцией самого кода Грея. 
Чем больше порождающее множество, тем дольше и более ресурсоемкие будут вычисления. 
Например, если брать не 20 векторов, как в файле tst_20_32.txt, а 30, то время вычилений вырастет в 1024 раз.
Также на время исполнения сильно влияет размер вектора в порождающем множестве.

Дальнейшие развитие - попробовать реализавать алгоритмы динамического программирования 
(хотел сделать но додумался до них в момент написать данного файла), подобно алгоритму укладки рюкзака.
Так же можно использовать побитовое представление вектора, напримере bitset, что ускоряет вычисления.
